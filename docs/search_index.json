[["index.html", "DATA ANALYSIS USING STATISTICAL PACKAGES Welcome", " DATA ANALYSIS USING STATISTICAL PACKAGES Dr. Pratheesh P. Gopinath 2022-01-30 Welcome Welcome to the online version of the book DATA ANALYSIS USING STATISTICAL PACKAGES . This book is a collection of all lecture notes covering the syllabus of DATA ANALYSIS USING STATISTICAL PACKAGES course (STAT 531) in Post Graduate programme of Kerala Agricultural University "],["preface.html", "Preface", " Preface Note: This book is published in MeLoN (Module for e-Learning &amp; Online Notes) . The online version of this book is free to read here. This work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License. If you have any feedback, please feel free to contact Dr.Pratheesh P. Gopinath. E-mail: pratheesh.pg@kau.in Thank you! "],["syllabus.html", "Syllabus Objective UNIT I UNIT II UNIT III UNIT IV UNIT V", " Syllabus Objective This course is meant for exposing the students in the usage of various statistical packages for analysis of data. It would provide the students an hands on experience in the analysis of their research data. This course is useful to all disciplines. UNIT I Use of Software packages for: Summarization and tabulation of data; Descriptive statistics; Graphical representation of data, Exploratory data analysis. UNIT II Fitting and testing the goodness of fit of discrete and continuous probability distributions; Testing of hypothesis based on large sample test statistics; Testing of hypothesis using chi-square, t and F statistics. UNIT III Concept of analysis of variance and covariance of data for single factor, multi-factor, one-way and multi-classified experiments, contrast analysis, multiple comparisons. UNIT IV Analysis of mixed models; Estimation of variance components; Testing the significance of contrasts; Correlation and regression including multiple regression. UNIT V Discriminant function; Factor analysis; Principal component analysis; Analysis of time series data, Fitting of non-linear models; Time series data. "],["introduction.html", "Chapter 1 Introduction 1.1 Statistical Software", " Chapter 1 Introduction Data science is a fast growing field with the development of advanced statistical tools for data analysis and visualization. When the data volume is large and also when precision is required, we depend on statistical software to get better insights from the data. Statistical software makes analysis easy, produces more precise results, enables us to use complex statistical tools and generates advance complex graphical outputs. One cannot blindly depend upon statistical software for data analysis, as you can use any software for data analysis as per your convenience. Even some of the basic statistical tools, you can perform calculations manually. Without proper knowledge in statistics, every software is a garbage in garbage out. What that really matters is knowledge in statistical concepts and tools, so that effective interpretations can be made from the data. Agricultural experiments demand a wide range of statistical tools for analysis, which includes exploratory analysis, design of experiments, and statistical genetics. It is a challenge for scientists and students to find a suitable platform for data analysis and publish the research outputs in quality journals. Most of the software available for data analysis are proprietary or lack a simple user interface. The open source programming language R and associated ecosystem of packages, provides an excellent platform for data analysis but as of yet, is not heavily utilized by researchers in agricultural disciplines. Insufficient programming and computational knowledge are the primary challenges for agricultural researchers using R for analysis. In our sessions, I will be using R studio. I believe that, there is no need for agricultural scientist and students to learn R as a programming language, as majority of you would like to have their data analyzed and make inference from it. I have seen agricultural researchers take up R workshops and leave it behind as such workshops mainly deals with code chunks; user will get easily tired of that. Beauty of R is that, it is a free open-source software. Apart from the software used, I again insist that students and researchers should strengthen their basic statistics knowledge and they should be able to decide, what tool should be used and when. I strongly recommend that you should go through the basic statistical theory by visiting my e-book Textbook of Agricultural Statistics. Before proceeding further, one should also have a basic knowledge about different statistical software available. 1.1 Statistical Software Statistical analysis software are specialized programs designed to allow users to perform complex statistical analysis. These software typically provide tools for the organization, interpretation, and presentation of selected data sets. Statistical analysis capabilities refer to capabilities that support analysis methodologies such as regression analysis, predictive analytics, and statistical modelling, among many other basic tools. 1.1.1 Types of statistical software 1.1.1.1 Open-source software Open-source software (OSS) is non-proprietary software that allows anyone to modify, enhance, or simply view the source code behind it. It can enable programmers to work or collaborate on projects created by different teams, companies, and organizations. Open-source software authors do not view their creations as proprietary and instead release their software under licenses that grant users with the desire and know-how to view, copy, learn, alter, and share its code. OSS is shared in a public repository, granting access to anyone who wants to work on the source code. However, open-source software tends to come with a distribution license, which establishes how people can interact, modify, and share the OSS. Once changes are made to the source code, the OSS should signify those changes and what methods were used to make them. Also, depending on the license, the resulting OSS may or may not be required to be free. With that, most open-source software is free but some require up-front costs or subscription fees. Few open source software are R and Rstudio (GUI interface and development environment for R) gretl – gnu regression, econometrics and time-series library JASP – A free software alternative to IBM SPSS Statistics with additional option for Bayesian methods Orange - a data mining, machine learning, and bioinformatics software Weka (machine learning) – a suite of machine learning software written at the University of Waikato Perl Data Language – Scientific computing with Perl 1.1.1.2 Public Domain Public domain software is any software that has no legal, copyright or editing restrictions associated with it. It is free and open-source software that can be publicly modified, distributed or sold without any restrictions. Dataplot - It is a public domain software system for scientific visualization and statistical analysis. It was developed and is being maintained at the National Institute of Standards and Technology. Dataplot's source code is available and in public domain CSPro - CSPro is short for the Census and Survey Processing System, is a public domain data processing software package developed by the U.S. Census Bureau and ICF International. 1.1.1.3 Freeware Freeware is software, most often proprietary, that is distributed at no monetary cost to the end user. There is no agreed-upon set of rights, license that defines freeware unambiguously; every publisher defines its own rules for the freeware it offers. For instance, modification, redistribution by third parties, and reverse engineering are permitted by some publishers but prohibited by others. Unlike with free and open-source software, which are also often distributed free of charge, the source code for freeware is typically not made available. Freeware may be intended to benefit its producer by, for example, encouraging sales of a more capable version BV4.1- The application software BV4.1 is an easy-to-use tool for decomposing and seasonally adjusting monthly or quarterly economic time series by version 4.1 of the Berlin procedure. It is being developed by the Federal Statistical Office of Germany. The software is released as freeware for non-commercial purposes. GeoDa - It is a free software package that conducts spatial data analysis, geo-visualization, spatial autocorrelation and spatial modeling. Maintained from 2016 by Centre for Spatial Data Science (CSDS) at the University of Chicago, originally developed by Spatial Analysis Laboratory of the University of Illinois at Urbana-Champaign WinPepi - It is a freeware package of statistical programs for epidemiologists, comprising seven programs with over 120 modules. 1.1.1.3.1 Proprietary software It is also known as non-free software or closed-source software, is computer software for which the software's publisher or another person reserves some licensing rights to use, modify, share modifications, or share the software, restricting user freedom with the software they lease. It is the opposite of open-source or free software. Non-free software sometimes includes patent rights. Some of the few well known proprietary statistical software are:- SAS - SAS (previously \"Statistical Analysis System\") is a statistical software suite developed by SAS Institute for data management, advanced analytics, multivariate analysis, business intelligence, criminal investigation and predictive analytics. SAS was developed at North Carolina State University from 1966 until 1976, when SAS Institute was incorporated. SAS was further developed in the 1980s and 1990s with the addition of new statistical procedures, additional components and the introduction of JMP. SPSS Statistics – SPSS Statistics is a statistical software suite developed by IBM for data management, advanced analytics, multivariate analysis, business intelligence, and criminal investigation. Long produced by SPSS Inc., it was acquired by IBM in 2009. Current versions (post 2015) have the brand name: IBM SPSS Statistics. The software name originally stood for Statistical Package for the Social Sciences (SPSS), reflecting the original market, then later changed to Statistical Product and Service Solutions. Stata – It is a general-purpose statistical software package developed by StataCorp for data manipulation, visualization, statistics, and automated reporting. It is used by researchers in many fields, including biomedicine, epidemiology, sociology and science. Stata was initially developed by Computing Resource Center in California and the first version was released in 1985. In 1993, the company was renamed Stata Corporation, now known as StataCorp. Genstat (General Statistics) - It is a statistical software package with data analysis capabilities, particularly in the field of agriculture. It was developed in 1968 by Rothamsted Research in the United Kingdom and was designed to provide modular design, linear mixed models and graphic functions. It is developed and distributed by VSN International (VSNi), which is owned by The Numerical Algorithms Group and Rothamsted Research. Minitab – Minitab is a statistics package developed at the Pennsylvania State University by researchers Barbara F. Ryan, Thomas A. Ryan, Jr., and Brian L. Joiner in conjunction with Triola Statistics Company in 1972. It began as a light version of OMNITAB 80, a statistical analysis program by National Institute of Standards and Technology. MATLAB – MATLAB an abbreviation of \"MATrix LABoratory\" is a proprietary multi-paradigm programming language and numeric computing environment developed by MathWorks. MATLAB allows matrix manipulations, plotting of functions and data, implementation of algorithms, creation of user interfaces, and interfacing with programs written in other languages. EViews – EViews is a statistical package for Windows, used mainly for time-series oriented econometric analysis. It is developed by Quantitative Micro Software (QMS). EViews can be used for general statistical analysis and econometric analyses, such as cross-section and panel data analysis and time series estimation and forecasting. EViews combines spreadsheet and relational database technology with the traditional tasks found in statistical software, and uses a Windows GUI (Graphical User Interface). For agricultural researchers I recommend using RStudio for data analysis, as it is easy to use. RStudio allows users to develop and edit programs in R by supporting a large number of statistical packages, higher quality graphics, and the ability to manage your workspace. We have developed a R package grapesAgri1 for agricultural research. We will be discussing this package towards last session. To read more on please see grapesAgri1 "],["introduction-to-r.html", "Chapter 2 Introduction to R 2.1 Rstudio 2.2 Installing R and R studio", " Chapter 2 Introduction to R R is a programming language for statistical computing and graphics supported by the R Core Team and the R Foundation for Statistical Computing. Created by statisticians Ross Ihaka and Robert Gentleman. R is an implementation of the S programming language. R is used among data miners, bioinformaticians and statisticians for data analysis and developing statistical software. Users have created packages to augment the functions of the R language. According to user surveys and studies of scholarly literature databases, R is one of the most commonly used programming languages used in data mining. The official R software environment is an open-source free software environment within the GNU package, available under the GNU General Public License. It is written primarily in C, Fortran, and R itself (partially self-hosting). R has a command line interface. Multiple third-party graphical user interfaces are also available, such as RStudio, an integrated development environment. Figure 2.1: R logo 2.1 Rstudio RStudio is an integrated development environment (IDE) for R. It includes a console, syntax-highlighting editor that supports direct code execution, as well as tools for plotting, history, debugging and workspace management. RStudio is available in open source and commercial editions and runs on the desktop (Windows, Mac, and Linux) or in a browser connected to RStudio Server. RStudio is a free and open-source integrated development environment (IDE) for R, a programming language for statistical computing and graphics. JJ Allaire, creator of the programming language ColdFusion, founded RStudio. RStudio is available in two editions: RStudio Desktop, where the program is run locally as a regular desktop application; and RStudio Server, which allows accessing RStudio using a web browser while it is running on a remote Linux server. RStudio is written in the C++ programming language and uses the Qt framework for its graphical user interface. Work on RStudio started at around December 2010, and the first public beta version (v0.92) was officially announced in February 2011. Figure 2.2: R studio logo Typical RStudio window has four panes as explained below Figure 2.3: R studio window Console This is where the action happens. Here any authentic R code typed after the ‘&gt;’ prompt will be executed after pressing ‘Enter’ to generate the output. This is where we are going to type our single call function to start our app for data analysis. Source This is where R scripts (collection of code) can be created and edited. We won’t be using much of these. Environment|History|Connections One can browse in the internet and know more about these tabs if interested, we wont be using this much. Files|Plots|Packages|Help|Viewer We are interested in the install button in this pane, to install packages required for our analysis. 2.2 Installing R and R studio First install R latest version Then install Rstudio see details on how to install –&gt; Click here The above descriptions are sourced from: The R Project for Statistical Computing RStudio Wikipedia R (programming language) Wikipedia RStudio grapesorchard.com "],["r-basics.html", "Chapter 3 R basics 3.1 Basic arithmetic operations 3.2 Basic arithmetic functions: 3.3 Assigning values to variables 3.4 Basic data types", " Chapter 3 R basics In this section we will be dealing with basic operations using R. One should be aware of these basics before proceeding to any kind of data analysis using R. The RStudio interface is simple. You type R code into the bottom line of the RStudio console pane (see figure 2.3) and then click Enter to run it. The code you type is called a command, because it will command your computer to do something for you. The line you type it into is called the command line. ‘#’ hashtag in R R treats the hashtag character, ’#’in a special way; R will not run anything that follows a hashtag on a line. This makes hashtags very useful for adding comments and annotations to your code. We will be able to read the comments, but your computer will not process it. 3.1 Basic arithmetic operations # Try these codes in R, Type these codes in console and hit enter # result of R code is also shown here # + (Addition) 7 + 4 ## [1] 11 # - (Subtraction) 7 - 4 ## [1] 3 # * (Multiplication) 7 * 2 ## [1] 14 # / (division) 7 / 2 ## [1] 3.5 # ^ (exponentiation) 7 ^ 2 ## [1] 49 The colon operator (:) returns every integer between two integers. It is an easy way to create a sequence of numbers. 100:130 ## [1] 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 ## [20] 119 120 121 122 123 124 125 126 127 128 129 130 3.2 Basic arithmetic functions: # Logarithm to the base e log(4) ## [1] 1.386294 # Logarithm to the base 10 log10(4) ## [1] 0.60206 # Logarithm to the base 2 log2(4) ## [1] 2 # absolute value abs(-4) ## [1] 4 # square root sqrt(4) ## [1] 2 3.3 Assigning values to variables x &lt;- 2 # it is that value 2 is assigned to variable x y &lt;- 5 # it is that value 5 is assigned to variable y # Now if you give x+5 or using any operator between x and y, you can see as below x + y ## [1] 7 x * y ## [1] 10 x / y ## [1] 0.4 x + 2*y ## [1] 12 Note that R is case sensitive, i.e. x and X are not equal. 3.4 Basic data types numeric character logical my_age &lt;- 32 # Numeric variable 32 is assigned to my_age # while writing your code it is preffered to use &#39;_&#39; instead of space my_name &lt;- &quot;Dr Pratheesh&quot; # Character variable # Are you a data scientist?: (yes/no) &lt;=&gt; (TRUE/FALSE) is_datascientist &lt;- TRUE # logical variable 3.4.1 Vectors A combination of multiple values (numeric, character or logical) How to create a vector Create a vector: c() for concatenate Case of missing values: NA (not available) and NaN (not a number) Get a subset of a vector: my_vector[i] to get the ith element # Create a numeric vector student_ages &lt;- c(27, 25, 29, 26, 20, 21, 23, 25) # Create a character vector student_name &lt;- c(&quot;asha&quot;, &quot;adhi&quot;, &quot;aravind&quot;, &quot;mary&quot;, &quot;peter&quot;, &quot;daisy&quot;, &quot;papu&quot;, &quot;ramu&quot;) # subset of a vector # obtain 3 rd element from student_name student_name[3] ## [1] &quot;aravind&quot; Case of missing values: NA (not available) and NaN (not a number) Get a subset of a vector: my_vector[i] to get the ith element Calculations with vectors max(x), min(x), range(x), length(x), sum(x), mean(x), prod(x): product of the elements in x, sd(x): standard deviation, var(x): variance, sort(x) # Create a numeric vector student_ages &lt;- c(27, 25, 29, 26, 20, 21, 23, 25) # Maximum value of the vector max(student_ages) ## [1] 29 # Minimum value of the vector min(student_ages) ## [1] 20 # Range of the vector range(student_ages) ## [1] 20 29 # Length of the vector length(student_ages) ## [1] 8 # Total of the values in the vector sum(student_ages) ## [1] 196 # Mean of the vector mean(student_ages) ## [1] 24.5 # Product of the elements in the vector prod(student_ages) ## [1] 122911425000 # Standard deviation sd(student_ages) ## [1] 3.023716 # Variance of the vector var(student_ages) ## [1] 9.142857 # Sort the values of the vector # Ascending order sort(student_ages) ## [1] 20 21 23 25 25 26 27 29 # Descending order sort(-student_ages) ## [1] -29 -27 -26 -25 -25 -23 -21 -20 "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
