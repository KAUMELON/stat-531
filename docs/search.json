[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"\n\n\nbook collection lecture notes covering syllabus DATA ANALYSIS USING STATISTICAL PACKAGES course (STAT 531) Post Graduate programme Kerala Agricultural University\n","code":""},{"path":"preface.html","id":"preface","chapter":"Preface","heading":"Preface","text":"\n\nNote: book published MeLoN (Module e-Learning & Online Notes) . online version book free read .\n\nfeedback, please feel free contact Dr.Pratheesh P. Gopinath. E-mail: pratheesh.pg@kau.Thank !\n","code":""},{"path":"syllabus.html","id":"syllabus","chapter":"Syllabus","heading":"Syllabus","text":"","code":""},{"path":"syllabus.html","id":"objective","chapter":"Syllabus","heading":"Objective","text":"course meant exposing students usage various statistical\npackages analysis data. provide students hands experience \nanalysis research data. course useful disciplines.","code":""},{"path":"syllabus.html","id":"unit-i","chapter":"Syllabus","heading":"UNIT I","text":"Use Software packages : Summarization tabulation data; Descriptive\nstatistics; Graphical representation data, Exploratory data analysis.","code":""},{"path":"syllabus.html","id":"unit-ii","chapter":"Syllabus","heading":"UNIT II","text":"Fitting testing goodness fit discrete continuous probability\ndistributions; Testing hypothesis based large sample test statistics; Testing \nhypothesis using chi-square, t F statistics.","code":""},{"path":"syllabus.html","id":"unit-iii","chapter":"Syllabus","heading":"UNIT III","text":"Concept analysis variance covariance data single factor, multi-factor,\none-way multi-classified experiments, contrast analysis, multiple comparisons.","code":""},{"path":"syllabus.html","id":"unit-iv","chapter":"Syllabus","heading":"UNIT IV","text":"Analysis mixed models; Estimation variance components; Testing significance\ncontrasts; Correlation regression including multiple regression.","code":""},{"path":"syllabus.html","id":"unit-v","chapter":"Syllabus","heading":"UNIT V","text":"Discriminant function; Factor analysis; Principal component analysis; Analysis time\nseries data, Fitting non-linear models; Time series data.","code":""},{"path":"introduction.html","id":"introduction","chapter":"1 Introduction","heading":"1 Introduction","text":"Data science fast growing field development advanced\nstatistical tools data analysis visualization. data\nvolume large also precision required, depend \nstatistical software get better insights data. Statistical\nsoftware makes analysis easy, produces precise results, enables us\nuse complex statistical tools generates advance complex graphical\noutputs.One blindly depend upon statistical software data analysis,\ncan use software data analysis per convenience.\nEven basic statistical tools, can perform calculations\nmanually. Without proper knowledge statistics, every software \ngarbage garbage . really matters knowledge \nstatistical concepts tools, effective interpretations can \nmade data.Agricultural experiments demand wide range statistical tools \nanalysis, includes exploratory analysis, design experiments,\nstatistical genetics. challenge scientists students\nfind suitable platform data analysis publish research\noutputs quality journals. software available data\nanalysis proprietary lack simple user interface. open\nsource programming language R associated ecosystem packages,\nprovides excellent platform data analysis yet, \nheavily utilized researchers agricultural disciplines.\nInsufficient programming computational knowledge primary\nchallenges agricultural researchers using R analysis.sessions, using R studio. believe , \nneed agricultural scientist students learn R programming\nlanguage, majority like data analyzed \nmake inference . seen agricultural researchers take R\nworkshops leave behind workshops mainly deals code\nchunks; user get easily tired . Beauty R , \nfree open-source software. Apart software used, insist\nstudents researchers strengthen basic statistics\nknowledge able decide, tool used\n. strongly recommend go basic\nstatistical theory visiting e-book Textbook Agricultural Statistics. proceeding , one\nalso basic knowledge different statistical software\navailable.","code":""},{"path":"introduction.html","id":"statistical-software","chapter":"1 Introduction","heading":"1.1 Statistical Software","text":"Statistical analysis software specialized programs designed allow\nusers perform complex statistical analysis. software typically\nprovide tools organization, interpretation, presentation \nselected data sets. Statistical analysis capabilities refer \ncapabilities support analysis methodologies regression\nanalysis, predictive analytics, statistical modelling, among many\nbasic tools.","code":""},{"path":"introduction.html","id":"types-of-statistical-software","chapter":"1 Introduction","heading":"1.1.1 Types of statistical software","text":"","code":""},{"path":"introduction.html","id":"open-source-software","chapter":"1 Introduction","heading":"1.1.1.1 Open-source software","text":"Open-source software (OSS) non-proprietary software allows\nanyone modify, enhance, simply view source code behind . \ncan enable programmers work collaborate projects created \ndifferent teams, companies, organizations. Open-source software\nauthors view creations proprietary instead release\nsoftware licenses grant users desire \nknow-view, copy, learn, alter, share code.OSS shared public repository, granting access anyone \nwants work source code. However, open-source software tends \ncome distribution license, establishes people can\ninteract, modify, share OSS.changes made source code, OSS signify \nchanges methods used make . Also, depending \nlicense, resulting OSS may may required free. \n, open-source software free require -front costs\nsubscription fees.open source software areR Rstudio (GUI interface development environment R)R Rstudio (GUI interface development environment R)gretl – gnu regression, econometrics time-series librarygretl – gnu regression, econometrics time-series libraryJASP – free software alternative IBM SPSS Statistics \nadditional option Bayesian methodsJASP – free software alternative IBM SPSS Statistics \nadditional option Bayesian methodsOrange - data mining, machine learning, bioinformatics\nsoftwareOrange - data mining, machine learning, bioinformatics\nsoftwareWeka (machine learning) – suite machine learning software\nwritten University WaikatoWeka (machine learning) – suite machine learning software\nwritten University WaikatoPerl Data Language – Scientific computing PerlPerl Data Language – Scientific computing Perl","code":""},{"path":"introduction.html","id":"public-domain","chapter":"1 Introduction","heading":"1.1.1.2 Public Domain","text":"Public domain software software legal, copyright \nediting restrictions associated . free open-source\nsoftware can publicly modified, distributed sold without \nrestrictions.Dataplot - public domain software system scientific\nvisualization statistical analysis. developed \nmaintained National Institute Standards \nTechnology. Dataplot's source code available public\ndomainDataplot - public domain software system scientific\nvisualization statistical analysis. developed \nmaintained National Institute Standards \nTechnology. Dataplot's source code available public\ndomainCSPro - CSPro short Census Survey Processing System,\npublic domain data processing software package developed \nU.S. Census Bureau ICF International.CSPro - CSPro short Census Survey Processing System,\npublic domain data processing software package developed \nU.S. Census Bureau ICF International.","code":""},{"path":"introduction.html","id":"freeware","chapter":"1 Introduction","heading":"1.1.1.3 Freeware","text":"Freeware software, often proprietary, distributed \nmonetary cost end user. agreed-upon set rights,\nlicense defines freeware unambiguously; every publisher defines \nrules freeware offers. instance, modification,\nredistribution third parties, reverse engineering permitted\npublishers prohibited others. Unlike free \nopen-source software, also often distributed free charge,\nsource code freeware typically made available. Freeware\nmay intended benefit producer , example, encouraging\nsales capable versionBV4.1- application software BV4.1 easy--use tool \ndecomposing seasonally adjusting monthly quarterly economic\ntime series version 4.1 Berlin procedure. \ndeveloped Federal Statistical Office Germany. software\nreleased freeware non-commercial purposes.BV4.1- application software BV4.1 easy--use tool \ndecomposing seasonally adjusting monthly quarterly economic\ntime series version 4.1 Berlin procedure. \ndeveloped Federal Statistical Office Germany. software\nreleased freeware non-commercial purposes.GeoDa - free software package conducts spatial data\nanalysis, geo-visualization, spatial autocorrelation spatial\nmodeling. Maintained 2016 Centre Spatial Data Science\n(CSDS) University Chicago, originally developed Spatial\nAnalysis Laboratory University Illinois \nUrbana-ChampaignGeoDa - free software package conducts spatial data\nanalysis, geo-visualization, spatial autocorrelation spatial\nmodeling. Maintained 2016 Centre Spatial Data Science\n(CSDS) University Chicago, originally developed Spatial\nAnalysis Laboratory University Illinois \nUrbana-ChampaignWinPepi - freeware package statistical programs \nepidemiologists, comprising seven programs 120 modules.WinPepi - freeware package statistical programs \nepidemiologists, comprising seven programs 120 modules.","code":""},{"path":"introduction.html","id":"proprietary-software","chapter":"1 Introduction","heading":"1.1.1.3.1 Proprietary software","text":"also known non-free software closed-source software, \ncomputer software software's publisher another person\nreserves licensing rights use, modify, share modifications, \nshare software, restricting user freedom software \nlease. opposite open-source free software. Non-free\nsoftware sometimes includes patent rights. well known\nproprietary statistical software :-SAS - SAS (previously \"Statistical Analysis System\") statistical\nsoftware suite developed SAS Institute data management, advanced\nanalytics, multivariate analysis, business intelligence, criminal\ninvestigation predictive analytics. SAS developed North\nCarolina State University 1966 1976, SAS Institute \nincorporated. SAS developed 1980s 1990s \naddition new statistical procedures, additional components \nintroduction JMP.SPSS Statistics – SPSS Statistics statistical software suite\ndeveloped IBM data management, advanced analytics, multivariate\nanalysis, business intelligence, criminal investigation. Long\nproduced SPSS Inc., acquired IBM 2009. Current versions\n(post 2015) brand name: IBM SPSS Statistics. software name\noriginally stood Statistical Package Social Sciences (SPSS),\nreflecting original market, later changed Statistical\nProduct Service Solutions.Stata – general-purpose statistical software package developed\nStataCorp data manipulation, visualization, statistics, \nautomated reporting. used researchers many fields, including\nbiomedicine, epidemiology, sociology science. Stata initially\ndeveloped Computing Resource Center California first\nversion released 1985. 1993, company renamed Stata\nCorporation, now known StataCorp.Genstat (General Statistics) - statistical software package \ndata analysis capabilities, particularly field agriculture. \ndeveloped 1968 Rothamsted Research United Kingdom \ndesigned provide modular design, linear mixed models graphic\nfunctions. developed distributed VSN International (VSNi),\nowned Numerical Algorithms Group Rothamsted\nResearch.Minitab – Minitab statistics package developed Pennsylvania\nState University researchers Barbara F. Ryan, Thomas . Ryan, Jr.,\nBrian L. Joiner conjunction Triola Statistics Company \n1972. began light version OMNITAB 80, statistical analysis\nprogram National Institute Standards Technology.MATLAB – MATLAB abbreviation \"MATrix LABoratory\" \nproprietary multi-paradigm programming language numeric computing\nenvironment developed MathWorks. MATLAB allows matrix manipulations,\nplotting functions data, implementation algorithms, creation\nuser interfaces, interfacing programs written \nlanguages.EViews – EViews statistical package Windows, used mainly \ntime-series oriented econometric analysis. developed \nQuantitative Micro Software (QMS). EViews can used general\nstatistical analysis econometric analyses, cross-section \npanel data analysis time series estimation forecasting. EViews\ncombines spreadsheet relational database technology \ntraditional tasks found statistical software, uses Windows GUI\n(Graphical User Interface).agricultural researchers recommend using RStudio data\nanalysis, easy use. RStudio allows users develop edit\nprograms R supporting large number statistical packages,\nhigher quality graphics, ability manage workspace. developed R package grapesAgri1 agricultural research. discussing package towards last session. read please see grapesAgri1","code":""},{"path":"introduction-to-r.html","id":"introduction-to-r","chapter":"2 Introduction to R","heading":"2 Introduction to R","text":"R programming language statistical computing graphics supported R Core Team R Foundation Statistical Computing. Created statisticians Ross Ihaka Robert Gentleman. R implementation S programming language. R used among data miners, bioinformaticians statisticians data analysis developing statistical software. Users created packages augment functions R language.\nAccording user surveys studies scholarly literature databases, R one commonly used programming languages used data mining. official R software environment open-source free software environment within GNU package, available GNU General Public License. written primarily C, Fortran, R (partially self-hosting). R command line interface. Multiple third-party graphical user interfaces also available, RStudio, integrated development environment.\nFigure 2.1: R logo\n","code":""},{"path":"introduction-to-r.html","id":"rstudio","chapter":"2 Introduction to R","heading":"2.1 Rstudio","text":"RStudio integrated development environment (IDE) R. includes console, syntax-highlighting editor supports direct code execution, well tools plotting, history, debugging workspace management. RStudio available open source commercial editions runs desktop (Windows, Mac, Linux) browser connected RStudio Server. RStudio free open-source integrated development environment (IDE) R, programming language statistical computing graphics. JJ Allaire, creator programming language ColdFusion, founded RStudio. RStudio available two editions: RStudio Desktop, program run locally regular desktop application; RStudio Server, allows accessing RStudio using web browser running remote Linux server.RStudio written C++ programming language uses Qt framework graphical user interface. Work RStudio started around December 2010, first public beta version (v0.92) officially announced February 2011.\nFigure 2.2: R studio logo\nTypical RStudio window four panes explained \nFigure 2.3: R studio window\nConsoleThis action happens. authentic R code typed ‘>’ prompt executed pressing ‘Enter’ generate output. going type single call function start app data analysis.Source EditorThis R scripts (collection code) can created edited. New R script can opened clicking File –> New File –> R Script using short cut ctrl+shift+N. can type codes . run code console execute, place cursor line code written press ctrl+enter highlight code wish evaluate clicking “Run” button top right Source. can save R codes, written script.Environment|History|ConnectionsAll data objects (vectors, matrices, dataframes) defined current R session listed Environment tab panel. data objects, may also examine details like quantity observations rows. clickable options available tab, Import Dataset, launch graphical user interface (GUI) inputting data R.panel’s History tab provides history code previously evaluated Console.Environment / History panel helpful become accustomed R. However, can ignore right now. can simply just reduce window clicking minimise button panel’s upper right corner wish clear space screen.Files|Plots|Packages|Help|ViewerYou can find collection useful information Files|Plots|Packages|Help panel. Let’s examine tab detail:\n- file directory hard disc accessible files panel. can utilise “Files” panel set working directory clicking “” “Set Working Directory” ’ve navigated folder wish read save files.plots displayed Plots panel. buttons export plot pdf jpg open plot separate window.\ninterested install button pane, install packages required analysis.","code":""},{"path":"introduction-to-r.html","id":"installing-r-and-r-studio","chapter":"2 Introduction to R","heading":"2.2 Installing R and R studio","text":"First install R latest versionFirst install R latest versionThen install RstudioThen install Rstudiosee details install –> Click ","code":""},{"path":"introduction-to-r.html","id":"the-above-descriptions-are-sourced-from","chapter":"2 Introduction to R","heading":"The above descriptions are sourced from:","text":"R Project Statistical ComputingRStudioWikipedia R (programming language)Wikipedia RStudiograpesorchard.com","code":""},{"path":"rbase.html","id":"rbase","chapter":"3 R basics","heading":"3 R basics","text":"section dealing basic operations using R. One aware basics proceeding kind data analysis using R.RStudio interface simple. type R code bottom line RStudio console pane (see figure 2.3) click Enter run . code type called command, command computer something . line type called command line.‘#’ hashtag R\nR treats hashtag character, ’#’special way; R run anything follows hashtag line. makes hashtags useful adding comments annotations code. able read comments, computer process .","code":""},{"path":"rbase.html","id":"basic-arithmetic-operations","chapter":"3 R basics","heading":"3.1 Basic arithmetic operations","text":"colon operator (:) returns every integer two integers. easy way create sequence numbers.","code":"\n# Try these codes in R, Type these codes in console and hit enter\n# result of R code is also shown here  \n\n# + (Addition)   \n7 + 4  ## [1] 11\n# - (Subtraction)  \n7 - 4  ## [1] 3\n# * (Multiplication)\n7 * 2  ## [1] 14\n# / (division) \n7 / 2  ## [1] 3.5\n# ^ (exponentiation) \n7 ^ 2## [1] 49\n100:130##  [1] 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118\n## [20] 119 120 121 122 123 124 125 126 127 128 129 130"},{"path":"rbase.html","id":"basic-arithmetic-functions","chapter":"3 R basics","heading":"3.2 Basic arithmetic functions:","text":"","code":"\n# Logarithm to the base e  \nlog(4)  ## [1] 1.386294\n# Logarithm to the base 10  \nlog10(4)  ## [1] 0.60206\n# Logarithm to the base 2  \nlog2(4)  ## [1] 2\n# absolute value\nabs(-4)  ## [1] 4\n# square root\nsqrt(4) ## [1] 2"},{"path":"rbase.html","id":"assigning-values-to-variables","chapter":"3 R basics","heading":"3.3 Assigning values to variables","text":"Note R case sensitive, .e. x X equal.","code":"\nx <- 2\n# it is that value 2 is assigned to variable x  \n\ny <- 5  \n\n# it is that value 5 is assigned to variable y\n\n# Now if you give x+5 or using any operator between x and y, you can see as below  \n\nx + y  ## [1] 7\nx * y  ## [1] 10\nx / y  ## [1] 0.4\nx + 2*y  ## [1] 12"},{"path":"rbase.html","id":"basic-data-types","chapter":"3 R basics","heading":"3.4 Basic data types","text":"numericcharacterlogical","code":"\nmy_age <- 32   \n# Numeric variable 32 is assigned to my_age\n\n# while writing your code it is preffered to use '_' instead of space  \n\nmy_name <- \"Dr Pratheesh\" # Character variable  \n\n#  Are you a data scientist?: (yes/no) <=> (TRUE/FALSE)  \n\nis_datascientist <- TRUE # logical variable"},{"path":"rbase.html","id":"vectors","chapter":"3 R basics","heading":"3.4.1 Vectors","text":"combination multiple values (numeric, character logical)","code":""},{"path":"rbase.html","id":"how-to-create-a-vector","chapter":"3 R basics","heading":"How to create a vector","text":"Create vector: c() concatenateCase missing values: NA (available) NaN (number)Get subset vector: my_vector[] get ith elementCase missing values: NA (available) NaN (number)\nGet subset vector: my_vector[] get ith element","code":"\n# Create a numeric vector\nstudent_ages <- c(27, 25, 29, 26, 20, 21, 23, 25)  \n\n# Create a character vector\nstudent_name <- c(\"asha\", \"adhi\", \"aravind\", \n                  \"mary\", \"peter\", \"daisy\", \n                  \"papu\", \"ramu\")  \n\n# subset of a vector  \n\n# obtain 3 rd element from student_name  \n\nstudent_name[3]## [1] \"aravind\""},{"path":"rbase.html","id":"calculations-with-vectors","chapter":"3 R basics","heading":"Calculations with vectors","text":"max(x), min(x), range(x), length(x), sum(x), mean(x), prod(x): product elements x, sd(x): standard deviation, var(x): variance, sort(x)","code":"\n# Create a numeric vector\nstudent_ages <- c(27, 25, 29, 26, 20, 21, 23, 25)  \n\n# Maximum value of the vector\nmax(student_ages)## [1] 29\n# Minimum value of the vector\nmin(student_ages)## [1] 20\n# Range of the vector\nrange(student_ages)  ## [1] 20 29\n# Length of the vector\nlength(student_ages)  ## [1] 8\n# Total of the values in the vector\nsum(student_ages)## [1] 196\n# Mean of the vector\nmean(student_ages)  ## [1] 24.5\n# Product of the elements in the vector\nprod(student_ages)## [1] 122911425000\n# Standard deviation  \nsd(student_ages)## [1] 3.023716\n# Variance of the vector\nvar(student_ages)## [1] 9.142857\n# Sort the values of the vector\n\n# Ascending order\nsort(student_ages,decreasing = FALSE)## [1] 20 21 23 25 25 26 27 29\n# Descending order\nsort(student_ages,decreasing = TRUE)## [1] 29 27 26 25 25 23 21 20"},{"path":"rbase.html","id":"matrices","chapter":"3 R basics","heading":"3.4.2 Matrices","text":"’s homogeneous collection data sets arranged two dimensional organisation. ’s m*n array similar data type. created using vector input. fixed number rows columns. can perform many arithmetic operations R matrix like – addition, subtraction, multiplication, divisions.Create naming matrix: matrix(), cbind(), rbind(), rownames(), colnames()\nTranspose matrix: t()\nDimensions matrix: ncol(), nrow(), dim()\nGet subset matrix: my_data[row, col]\nCalculations numeric matrices: rowSums(), colSums(), rowMeans(), colMeans()","code":"\n# make three vectors c1, c2 and c3\nc1<-c(3,4,5)\nc2<-c(7,8,9)\nc3<-c(11,12,13)\n\n# Creating matrix by binding column wise  \nA <- cbind(c1,c2,c3)\nprint(A)##      c1 c2 c3\n## [1,]  3  7 11\n## [2,]  4  8 12\n## [3,]  5  9 13\n# Creating matrix by binding row wise  \nB <- rbind(c1,c2,c3)\nprint(B)  ##    [,1] [,2] [,3]\n## c1    3    4    5\n## c2    7    8    9\n## c3   11   12   13\n# Adding two matrices\nA+B##      c1 c2 c3\n## [1,]  6 11 16\n## [2,] 11 16 21\n## [3,] 16 21 26\n# Simple element by element multiplication up to matrices.\n\nA*B##      c1  c2  c3\n## [1,]  9  28  55\n## [2,] 28  64 108\n## [3,] 55 108 169\n# Matrix multiplication  \n\nA%*%B##      [,1] [,2] [,3]\n## [1,]  179  200  221\n## [2,]  200  224  248\n## [3,]  221  248  275\n# Using matrix() function\n# Elements are arranged sequentially by row.\nM <- matrix(c(3:14), nrow = 4, byrow = TRUE)\nprint(M)##      [,1] [,2] [,3]\n## [1,]    3    4    5\n## [2,]    6    7    8\n## [3,]    9   10   11\n## [4,]   12   13   14\n# Elements are arranged sequentially by column.\nN <- matrix(c(3:14), nrow = 4, byrow = FALSE)\nprint(N)##      [,1] [,2] [,3]\n## [1,]    3    7   11\n## [2,]    4    8   12\n## [3,]    5    9   13\n## [4,]    6   10   14\n# Define the column and row names.\nrownames = c(\"row1\", \"row2\", \"row3\", \"row4\")\ncolnames = c(\"col1\", \"col2\", \"col3\")\n\nP <- matrix(c(3:14), nrow = 4, byrow = TRUE, dimnames = list(rownames, colnames))\nprint(P)  ##      col1 col2 col3\n## row1    3    4    5\n## row2    6    7    8\n## row3    9   10   11\n## row4   12   13   14\n# Access the element at 3rd column and 1st row.\nP[1,3]## [1] 5\n# Access the element at 2nd column and 4th row.\nP[4,2]## [1] 13\n# Access only the  2nd row.\nP[2,]## col1 col2 col3 \n##    6    7    8\n# Access only the 3rd column.  \nP[,3]  ## row1 row2 row3 row4 \n##    5    8   11   14\n# Assign element at 1st row and 3rd column of matrix P to the variable x  \n\nx<-P[1,3]  \nprint(x)## [1] 5\n# create a vector from the second column of matrix P  \n\ny<-P[,2]\ny<-as.vector(y)\n\n#Transpose a matrix\nQ<-t(P)\nprint(Q)##      row1 row2 row3 row4\n## col1    3    6    9   12\n## col2    4    7   10   13\n## col3    5    8   11   14\n# Knowing dimensions of a matrix\n\n#Number of columns in A\nncol(A)  ## [1] 3\n#Number of rows in A\nnrow(A)## [1] 3\n# Number of rows and columns\ndim(A)  ## [1] 3 3\n# Calculations with numeric matrices  \n\n# Compute row sums of matrix A\nrowSums(A)  ## [1] 21 24 27\n# Compute column sums of matrix A\ncolSums(A)  ## c1 c2 c3 \n## 12 24 36\n# Compute row means of matrix A\nrowMeans(A)  ## [1] 7 8 9\n# Compute column means of matrix A\ncolMeans(A)## c1 c2 c3 \n##  4  8 12"},{"path":"rbase.html","id":"data-frames","chapter":"3 R basics","heading":"3.4.3 Data frames","text":"data frame data type, going use frequently. data frame like matrix can columns different types (numeric, character, logical). Rows observations (individuals) columns variables. Function data.frame() used create data frameTo check whether data data frame, use .data.frame() function. Returns TRUE data data frame:check whether data matrix, data frame class use function class()Convert data class data frame use function .data.frame()described matrix section, can use function t() transpose data frame:","code":"\nfriends_data <- data.frame(\n  name = c(\"asha\", \"adhi\", \"aravind\", \n                  \"mary\"), \n  age = c(20,23,22,21),\n  height = c(180, 170, 185, 169),\n  married = c(TRUE, FALSE, TRUE, TRUE)  \n)  \n\n# Print\nfriends_data##      name age height married\n## 1    asha  20    180    TRUE\n## 2    adhi  23    170   FALSE\n## 3 aravind  22    185    TRUE\n## 4    mary  21    169    TRUE\nis.data.frame(friends_data)  ## [1] TRUE\n# What is the class of A? --> matrix\nclass(A)  ## [1] \"matrix\" \"array\"\n# What is the class of friends_data? --> matrix\nclass(friends_data)## [1] \"data.frame\"\n# Convert it as a data frame\nA2 <- as.data.frame(A)\n# Now, the class is data.frame\nclass(A2)## [1] \"data.frame\"\nt(friends_data)##         [,1]   [,2]    [,3]      [,4]  \n## name    \"asha\" \"adhi\"  \"aravind\" \"mary\"\n## age     \"20\"   \"23\"    \"22\"      \"21\"  \n## height  \"180\"  \"170\"   \"185\"     \"169\" \n## married \"TRUE\" \"FALSE\" \"TRUE\"    \"TRUE\""},{"path":"rbase.html","id":"operations-on-data-frame","chapter":"3 R basics","heading":"3.4.3.1 Operations on data frame","text":"Positive indexing name locationNegative IndexingIndex characteristicsWe want select friends age greater equal 22.don’t want see column data selected rows just interested displaying, example, friend names age friends age >= 22, use following R code:’re finding selection statement starting inconvenient, can put row column selections variables first, :’s also possible use function subset() follow.Another option use functions attach() detach(). function attach() takes data frame makes columns accessible simply giving names.Extend data frame\nAdd new column data frameIt’s also possible use functions cbind() rbind() extend data frame.Calculations data frameWith numeric data frame, can use function rowSums(), colSums(), colMeans(), rowMeans() apply().apply() functionPractical 1: Matrices vectorsCreate vector numbers form 23 33Assign vector name “numbers”Create Matrix named “mat_num” elements 1 20 4 rows 5 columnsName columns rows matrix mat_num names likeCompute column means row means matrix mat_numAccess element second row third column matrix mat_num\nPractical 2: Data framesCreate data frame 10 students name, age (20 25), height degree.Select rows age 23Find mean total age\n","code":"\n# Access the data in 'name' column in friends_data\n# dollar sign is used\nfriends_data$name  ## [1] \"asha\"    \"adhi\"    \"aravind\" \"mary\"\n# or use this\nfriends_data[, 'name']  ## [1] \"asha\"    \"adhi\"    \"aravind\" \"mary\"\n# Subset columns 1 and 3\nfriends_data[ , c(1, 3)]  ##      name height\n## 1    asha    180\n## 2    adhi    170\n## 3 aravind    185\n## 4    mary    169\n# Subset columns 1 to 3  \nfriends_data[ , c(1:3)]    ##      name age height\n## 1    asha  20    180\n## 2    adhi  23    170\n## 3 aravind  22    185\n## 4    mary  21    169\n# Exclude column 1  \n\nfriends_data[, -1]  ##   age height married\n## 1  20    180    TRUE\n## 2  23    170   FALSE\n## 3  22    185    TRUE\n## 4  21    169    TRUE\n# Identify rows that meet the condition\nfriends_data$age >= 22   ## [1] FALSE  TRUE  TRUE FALSE\n# TRUE specifies that the row contains a value of age >= 22.\n# Select the rows that meet the condition\nfriends_data[friends_data$age >= 22, ]  ##      name age height married\n## 2    adhi  23    170   FALSE\n## 3 aravind  22    185    TRUE\n# The R code above, tells R to get all rows from friends_data where age >= 22\n# Use column locations\nfriends_data[friends_data$age >= 22,  c(1, 2)]  ##      name age\n## 2    adhi  23\n## 3 aravind  22\n# Or use column names\nfriends_data[friends_data$age >= 22, c(\"name\", \"age\")]##      name age\n## 2    adhi  23\n## 3 aravind  22\nage22 <- friends_data$age >= 22\ncols <- c(\"name\", \"age\")\n# Then you can select the rows and columns with those variables:\n\nfriends_data[age22, cols]##      name age\n## 2    adhi  23\n## 3 aravind  22\n# Select friends data with age >= 22\nsubset(friends_data, age >= 22)  ##      name age height married\n## 2    adhi  23    170   FALSE\n## 3 aravind  22    185    TRUE\n# Attach a data frame\nattach(friends_data)\n# === Data manipulation ====\nfriends_data[age>=22, ]##      name age height married\n## 2    adhi  23    170   FALSE\n## 3 aravind  22    185    TRUE\n# === End of data manipulation ====\n# Detach the data frame\ndetach(friends_data)\n# Add group column to friends_data\ndata<-c(\"BSc\", \"MSc\", \"Phd\", \"Btech\")\nfriends_data$degree <- data\nfriends_data##      name age height married degree\n## 1    asha  20    180    TRUE    BSc\n## 2    adhi  23    170   FALSE    MSc\n## 3 aravind  22    185    TRUE    Phd\n## 4    mary  21    169    TRUE  Btech\nroll_no<-c(234,235,236,238)\ncbind(friends_data, roll_no)##      name age height married degree roll_no\n## 1    asha  20    180    TRUE    BSc     234\n## 2    adhi  23    170   FALSE    MSc     235\n## 3 aravind  22    185    TRUE    Phd     236\n## 4    mary  21    169    TRUE  Btech     238\n# Following can be used when it is a numeric data frame\n\n# creating a numeric data frame\nc1<-c(3,4,5)\nc2<-c(7,8,9)\nc3<-c(11,12,13)\n\n# Creating matrix by binding column wise  \nex <- cbind(c1,c2,c3)\n\n# converting matrix to data frame\nex<-as.data.frame(ex)\nex##   c1 c2 c3\n## 1  3  7 11\n## 2  4  8 12\n## 3  5  9 13\nrowSums(ex)## [1] 21 24 27\ncolSums(ex)## c1 c2 c3 \n## 12 24 36\n# calculation in non numeric data frame on selected numeric columns\nattach(friends_data)\nsum(age)## [1] 86\nmean(age)## [1] 21.5apply(X, MARGIN, FUN)\nHere:\n  -x: an array or matrix\n-MARGIN:  take a value or range between 1 and 2 to define where to apply the function:\n  -MARGIN=1`: the manipulation is performed on rows\n-MARGIN=2`: the manipulation is performed on columns\n-MARGIN=c(1,2)` the manipulation is performed on rows and columns\n-FUN: tells which function to apply. Built functions like mean, median, sum, min, max and even user-defined functions can be applied>\napply(ex,2, mean)## c1 c2 c3 \n##  4  8 12\napply(ex,1, mean)## [1] 7 8 9"},{"path":"packages-and-libraries.html","id":"packages-and-libraries","chapter":"4 Packages and libraries","heading":"4 Packages and libraries","text":"","code":""},{"path":"packages-and-libraries.html","id":"packages","chapter":"4 Packages and libraries","heading":"4.1 Packages","text":"Packages organised collections R functions, data, compiled code. Packages useful functions perform specific tasks. useful packages agricultural research agricolae, grapesAgri1 etc.\nR environment, packages kept directory called “library”. R installs group packages default installation. default packages initially available R console launched. R application getting use installed packages needs explicitly loaded package library order use .","code":""},{"path":"packages-and-libraries.html","id":"repositories","chapter":"4 Packages and libraries","heading":"4.2 Repositories","text":"repository packages located can installed . Organizations developers local repository, often online open . well-liked R package repositories include: CRAN, BIOCONDUCTOR, GITHUB.","code":""},{"path":"packages-and-libraries.html","id":"cran","chapter":"4 Packages and libraries","heading":"4.2.1 CRAN","text":"Comprehensive R Archive Network(CRAN) official repository, international network ftp web servers run managed R community. coordinated R community, package can published CRAN, must pass number tests guarantee complies CRAN rules.","code":""},{"path":"packages-and-libraries.html","id":"bioconductor","chapter":"4 Packages and libraries","heading":"4.2.2 Bioconductor","text":"Open source software bioinformatics designed topic-specific repository known Bioconductor. keeping CRAN, submission review procedures, community quite active, holding numerous conferences meetings year.","code":""},{"path":"packages-and-libraries.html","id":"github","chapter":"4 Packages and libraries","heading":"4.2.3 Github","text":"well-known repository open source projects Github. popularity due unrestricted open source storage space, integration version control programme git, simplicity sharing teamwork.","code":""},{"path":"packages-and-libraries.html","id":"base-packages","chapter":"4 Packages and libraries","heading":"4.3 Base packages","text":"Base packages standard pacakges come pre-installed R installations regarded part R source code. fundamental R functions found base packages, make possible perform common statistical graphical operations datasets. Examples Base packages include stats, graphics, grDevices, utils, datasets, methods base. functions available Base packages can used basic operations data set. functions discussed earlier Section3, like mean(),min, log10,.data.frame etc.R distributed fifteen “base packages”: base, compiler, datasets, grDevices, graphics, grid, methods, parallel, splines, stats, stats4, tcltk, tools, translations, utils.addition, fifteen “recommended packages” CRAN included binary distributions R: KernSmooth, MASS, Matrix, boot, class, cluster, codetools, foreign, lattice, mgcv, nlme, nnet, rpart, spatial, survival.","code":""},{"path":"packages-and-libraries.html","id":"other-packages","chapter":"4 Packages and libraries","heading":"4.4 Other packages","text":"user develop package make available repositories. thousands helpful R packages.","code":""},{"path":"packages-and-libraries.html","id":"installing-r-packages","chapter":"4 Packages and libraries","heading":"4.5 Installing R Packages","text":"numerous ways install R Packages, listed . need active internet connectivity installing packages.","code":""},{"path":"packages-and-libraries.html","id":"from-cran","chapter":"4 Packages and libraries","heading":"4.5.1 From CRAN","text":"Installing Packages CRAN: installing Package CRAN need name package use following command:Simply express package name character vector first argument install.packages() function install one package :","code":"\ninstall.packages(\"package name\")  \ninstall.packages(c(\"grapesAgri1\", \"MASS\"))  "},{"path":"packages-and-libraries.html","id":"from-bioconductor","chapter":"4 Packages and libraries","heading":"4.5.2 From Bioconductor","text":"order install package Bioconductor, run following script first:install basic functions needed install bioconductor packages, biocLite() function. install core packages Bioconductor just type without arguments.Type names desired packages character vector format just need repository.Example:","code":"\nsource(\"https://bioconductor.org/biocLite.R\")  \nbiocLite()  \nbiocLite(c(\"GenomicFeatures\", \"AnnotationDbi\"))"},{"path":"packages-and-libraries.html","id":"from-github","chapter":"4 Packages and libraries","heading":"4.5.3 From github","text":"install R package github, start installing devtools package. best way CRAN.Install package interest GitHub using following code, need remember list author name package. example, installing grapesAgri1 package created pratheesh3780.","code":"\ninstall.packages(\"devtools\")  \ndevtools::install_github(\"pratheesh3780/grapesAgri1\")  "},{"path":"packages-and-libraries.html","id":"load-packages","chapter":"4 Packages and libraries","heading":"4.6 Load packages","text":"successfully install R package; need load package use session. library() function can used load package.Example","code":"\nlibrary(grapesAgri1)"},{"path":"packages-and-libraries.html","id":"load-multiple-packages-at-once","chapter":"4 Packages and libraries","heading":"4.6.1 Load Multiple Packages at Once","text":"need first specify vector package names:running previous R code, packages vector my_packages loaded R.","code":"\nmy_packages <- c(\"dplyr\", \"mice\", \"stringr\") # vector of package names \nlapply(my_packages, require, character.only = TRUE)    # Load multiple packages  "},{"path":"packages-and-libraries.html","id":"check-update-and-remove","chapter":"4 Packages and libraries","heading":"4.7 Check, Update and Remove","text":"check packages installed computer, type command:update packages, type command:update specific package, type command:install.packages(\"package name\")","code":"\ninstalled.packages()  \nupdate.packages()  \ninstall.packages(\"grapesAgri1\")  "},{"path":"packages-and-libraries.html","id":"installation-using-r-studio-ui","chapter":"4 Packages and libraries","heading":"4.8 Installation using R studio UI","text":"packages can installed using Rstudio User interface. Step step installation package grapesAgri1 shown . packages can installed similar wayStep 1: Click install button shown \nFigure 4.1: Step 1\nStep 2: Type name package window appears\nFigure 4.2: Step 2\nStep 3: Select package name click install\nFigure 4.3: Step 3\nStep 4: Load package name clicking check box.\nFigure 4.4: Step 4\nSelf EvaluationInstall package grapesAgri1 .","code":""},{"path":"import.html","id":"import","chapter":"5 Importing data files","heading":"5 Importing data files","text":"previous chapter discussed basics R\nprogramming including installation, launching, basic data types \narithmetic functions. , learn import data R. \nimportant ensure data well prepared importing\nR avoid errors.","code":""},{"path":"import.html","id":"preparing-your-file","chapter":"5 Importing data files","heading":"5.1 Preparing your file","text":"File can prepared MS ExcelFile can prepared MS ExcelUse first row column headers (column names). Generally,\ncolumns represent variables.Use first row column headers (column names). Generally,\ncolumns represent variables.Use first column row names. Generally rows represent\nobservations.Use first column row names. Generally rows represent\nobservations.Make sure row name unique. case \nanalysis experiments , row name treatment name,\nrepeated replicationMake sure row name unique. case \nanalysis experiments , row name treatment name,\nrepeated replicationColumn names compatible R naming conventions.","code":""},{"path":"import.html","id":"naming-conventions","chapter":"5 Importing data files","heading":"5.1.1 Naming conventions:","text":"Avoid names blank spaces. Bad column name Sepal width; Good\nconvention Sepal_widthAvoid names blank spaces. Bad column name Sepal width; Good\nconvention Sepal_widthAvoid names special symbols: ?, $, *, +, #, (, ), -, /, }, {,\n|, >, < etc. underscore can used.Avoid names special symbols: ?, $, *, +, #, (, ), -, /, }, {,\n|, >, < etc. underscore can used.Avoid beginning variable names number. Use letter instead.\nGood column names: obs_100m x100m. Bad column name: 100mAvoid beginning variable names number. Use letter instead.\nGood column names: obs_100m x100m. Bad column name: 100mColumn names must unique. Duplicated names allowed.Column names must unique. Duplicated names allowed.R case sensitive. means Name, NAME name, naMe \ntreated different.R case sensitive. means Name, NAME name, naMe \ntreated different.Avoid blank rows dataAvoid blank rows dataDelete comments fileDelete comments fileReplace missing values NA (denotes Available)Replace missing values NA (denotes Available)column containing date, use four digit format.\nGood format: 01/01/2016. Bad format: 01/01/16If column containing date, use four digit format.\nGood format: 01/01/2016. Bad format: 01/01/16A final good looking file\nFigure 5.1: example file\n","code":""},{"path":"import.html","id":"saving-file","chapter":"5 Importing data files","heading":"5.1.2 Saving file","text":"recommend save file .csv (comma separated value file)\nformat.CSV?usual file save MS Excel saved XLS files XLSX\nfiles. Workbook files Microsoft Excel 97 2003 known \nXLS files. XLSX extension used later versions Excel. \ndata worksheets workbook, including formatting,\ncharts, graphics, calculations, , contained XLS \nXLSX file formats.Comma Separated Values (CSV) format plain text format \nvalues separated commas, whereas Excel Sheets binary file\nformat (XLS) contains information worksheets file,\nincluding content formatting. spreadsheet programme,\nincluding Microsoft Excel, Open Office, Google Sheets, etc., can open\nCSV files. straightforward text editor can also used open CSV\nfiles. straightforward compatible majority \nplatforms, prevalent well-liked file format storing\naccessing data. certain drawbacks simplicity.\nCSV files can contain single sheet without formatting \nformulas.CSV files supported almost data upload interfaces,\nExcel (XLS XLSX) file types preferable storing \ncomplicated data. CSV file format may advantageous \nintend move data platforms export import \ninterfaces.","code":""},{"path":"import.html","id":"how-to-save-as-csv","chapter":"5 Importing data files","heading":"5.1.3 How to save as csv","text":"\"File name\" section \"Save \" tab, can select\n\"Save type\" change \"CSV (Comma delimited) (*.csv).\nFigure 5.2: save csv\n\nFigure 5.3: save csv (1)\n","code":""},{"path":"import.html","id":"importing-data-set-in-rstudio","chapter":"5 Importing data files","heading":"5.2 Importing Data set in Rstudio","text":"import csv file Rstudioclick File click Import Dataset select Text (base)\nFigure 5.4: Importing data set\nSelect file click open\nFigure 5.5: Import Dataset dialogue box\nImport Dataset dialogue box can change name \ndataset Box Name. Heading radio button default\n‘yes’. Click import. dataset now imported ready \nwork .","code":""},{"path":"import.html","id":"alternate-methods","chapter":"5 Importing data files","heading":"5.2.1 Alternate methods","text":"","code":""},{"path":"import.html","id":"importing-csv-files","chapter":"5 Importing data files","heading":"5.2.1.1 Importing csv files","text":"Data can also imported using read.csv() function R.\nread.csv('path file')","code":"\n# example\n\nmy_data<-read.csv(file = 'data/iris.csv')\n\n# here now the data set iris.csv is stored in the name my_data\n\n# You can now directly do operations on the my_data\n\nsummary(my_data)##   Sepal_Length    Sepal_Width     Petal_length    Petal_Width   \n##  Min.   :4.600   Min.   :2.300   Min.   :1.300   Min.   :0.200  \n##  1st Qu.:5.050   1st Qu.:2.925   1st Qu.:1.450   1st Qu.:0.200  \n##  Median :6.300   Median :3.050   Median :4.600   Median :1.500  \n##  Mean   :5.907   Mean   :3.021   Mean   :3.873   Mean   :1.247  \n##  3rd Qu.:6.500   3rd Qu.:3.200   3rd Qu.:5.350   3rd Qu.:1.850  \n##  Max.   :7.100   Max.   :3.500   Max.   :6.000   Max.   :2.500  \n##                  NA's   :1                                      \n##    Species         \n##  Length:15         \n##  Class :character  \n##  Mode  :character  \n##                    \n##                    \n##                    \n## "},{"path":"import.html","id":"importing-excel-files","chapter":"5 Importing data files","heading":"5.2.1.2 Importing excel files","text":"import xlsx file, need package xlsx","code":"library(xlsx)  \n\ndf <-read.xlsx(\"path/file.xlsx\", n)\n\n# n is n-th worksheet to import"},{"path":"import.html","id":"accessing-the-variables","chapter":"5 Importing data files","heading":"5.3 Accessing the variables","text":"variables data can accessed using $ symbol data name","code":"\nmy_data<-read.csv(file = 'data/iris.csv')\n\n# Accessing variable Petal_length\n\nmy_data$Petal_length##  [1] 1.4 1.4 1.3 1.5 1.4 4.7 4.5 4.9 4.0 4.6 6.0 5.1 5.9 5.6 5.8\n# You can perform functions on them\n\nsummary(my_data$Petal_length)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##   1.300   1.450   4.600   3.873   5.350   6.000"},{"path":"import.html","id":"function-to-access-variables-easily","chapter":"5 Importing data files","heading":"5.3.1 Function to access variables easily","text":"Without using name data frame, can access variables data framework using attach() function R language. data framework attachment created attach() function removed using detach() function.database attached R search path. means database searched R evaluating variable, objects database can accessed simply giving names.","code":"\nmy_data<-read.csv(file = 'data/iris.csv')\n\n# Using function attach  \n\nattach(my_data)\n\n# Accessing variable Petal_length, now you can call variable name directly without using my_data\n\nPetal_length##  [1] 1.4 1.4 1.3 1.5 1.4 4.7 4.5 4.9 4.0 4.6 6.0 5.1 5.9 5.6 5.8\n# You can perform functions on them\n\nsummary(Petal_length)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##   1.300   1.450   4.600   3.873   5.350   6.000\n# Using detach function\n\ndetach(my_data)"},{"path":"import.html","id":"some-useful-functions","chapter":"5 Importing data files","heading":"5.4 Some useful functions","text":"","code":""},{"path":"import.html","id":"str","chapter":"5 Importing data files","heading":"5.4.1 str()","text":"R object structures displayed str(). str() frequently used display list’s contents.used particularly data set huge.","code":"\nmy_data<-read.csv(file = 'data/iris.csv')  \n\n# Using str() function\n\nstr(my_data)## 'data.frame':    15 obs. of  5 variables:\n##  $ Sepal_Length: num  5.1 4.9 4.7 4.6 5 7 6.4 6.9 5.5 6.5 ...\n##  $ Sepal_Width : num  3.5 3 3.2 3.1 NA 3.2 3.2 3.1 2.3 2.8 ...\n##  $ Petal_length: num  1.4 1.4 1.3 1.5 1.4 4.7 4.5 4.9 4 4.6 ...\n##  $ Petal_Width : num  0.2 0.2 0.2 0.2 0.2 1.4 1.5 1.5 1.3 1.5 ...\n##  $ Species     : chr  \"setosa\" \"setosa\" \"setosa\" \"setosa\" ..."},{"path":"import.html","id":"view","chapter":"5 Importing data files","heading":"5.5 View()","text":"Self assesmentCreate dataset excel 4 coloumns, save csv fileImport dataset R, rename my_dataCalculate summary my_data\n","code":"\nmy_data<-read.csv(file = 'data/iris.csv')  \n\n# Using str() function\n\nView(my_data)"},{"path":"dataset.html","id":"dataset","chapter":"6 Datasets in R","heading":"6 Datasets in R","text":"various pre-built data sets included R, typically used practice sets playing R functions. ’ll first go load use built-R data sets lecture. popular R demo data sets discussed, including mtcars, iris, ToothGrowth, PlantGrowth, USArrests.","code":""},{"path":"dataset.html","id":"pre-loaded-data","chapter":"6 Datasets in R","heading":"6.1 Pre-loaded data","text":"see list pre-loaded data system, type function data():","code":"\ndata()"},{"path":"dataset.html","id":"loading-a-built-in-r-data","chapter":"6 Datasets in R","heading":"6.2 Loading a built-in R data","text":"Load print mtcars data follow:","code":"\n# Loading\ndata(mtcars)\n# Print the first 6 rows\nhead(mtcars, 6)##                    mpg cyl disp  hp drat    wt  qsec vs am gear carb\n## Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\n## Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\n## Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\n## Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\n## Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\n## Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1"},{"path":"dataset.html","id":"most-used-data-sets-in-r","chapter":"6 Datasets in R","heading":"6.3 Most used data sets in R","text":"","code":""},{"path":"dataset.html","id":"mtcars","chapter":"6 Datasets in R","heading":"6.3.1 mtcars","text":"mtcars data extracted 1974 Motor Trend US magazine, comprises fuel consumption 10 aspects automobile design performance 32 automobiles (1973–74 models).want learn mtcars data sets, type : ?mtcars","code":"\n# 1. Loading \ndata(\"mtcars\")  \n\n# 2. Print\nhead(mtcars)  ##                    mpg cyl disp  hp drat    wt  qsec vs am gear carb\n## Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\n## Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\n## Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\n## Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\n## Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\n## Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n# Number of rows (observations)\nnrow(mtcars)  ## [1] 32\n# Number of columns (variables)\nncol(mtcars)## [1] 11\n?mtcars"},{"path":"dataset.html","id":"iris","chapter":"6 Datasets in R","heading":"6.3.2 iris","text":"iris data set gives measurements centimeters variables sepal length, sepal width, petal length petal width, respectively, 50 flowers 3 species iris. species Iris setosa, versicolor, virginica.want learn iris data sets, type : ?iris","code":"\ndata(\"iris\")\nhead(iris)##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n## 1          5.1         3.5          1.4         0.2  setosa\n## 2          4.9         3.0          1.4         0.2  setosa\n## 3          4.7         3.2          1.3         0.2  setosa\n## 4          4.6         3.1          1.5         0.2  setosa\n## 5          5.0         3.6          1.4         0.2  setosa\n## 6          5.4         3.9          1.7         0.4  setosa\n?iris"},{"path":"dataset.html","id":"toothgrowth","chapter":"6 Datasets in R","heading":"6.3.3 ToothGrowth","text":"results experiment examining impact vitamin C tooth development 60 Guinea pigs included data set. rat received one three vitamin C dose levels (0.5, 1, 2 mg/day) using either ascorbic acid orange juice delivery mechanism (form vitamin C coded VC).want learn ToothGrowth data sets, type : ?ToothGrowth","code":"\ndata(\"ToothGrowth\")\nhead(ToothGrowth)##    len supp dose\n## 1  4.2   VC  0.5\n## 2 11.5   VC  0.5\n## 3  7.3   VC  0.5\n## 4  5.8   VC  0.5\n## 5  6.4   VC  0.5\n## 6 10.0   VC  0.5\n?ToothGrowth"},{"path":"dataset.html","id":"plantgrowth","chapter":"6 Datasets in R","heading":"6.3.4 PlantGrowth","text":"Results experiment comparing yields two distinct treatment conditions control condition (determined dry weight plants).","code":"\ndata(\"PlantGrowth\")\nhead(PlantGrowth)##   weight group\n## 1   4.17  ctrl\n## 2   5.58  ctrl\n## 3   5.18  ctrl\n## 4   6.11  ctrl\n## 5   4.50  ctrl\n## 6   4.61  ctrl"},{"path":"dataset.html","id":"usarrests","chapter":"6 Datasets in R","heading":"6.3.5 USArrests","text":"Statistics rates violent crime US state","code":"\ndata(\"USArrests\")\nhead(USArrests)##            Murder Assault UrbanPop Rape\n## Alabama      13.2     236       58 21.2\n## Alaska       10.0     263       48 44.5\n## Arizona       8.1     294       80 31.0\n## Arkansas      8.8     190       50 19.5\n## California    9.0     276       91 40.6\n## Colorado      7.9     204       78 38.7"},{"path":"descriptive-statistics.html","id":"descriptive-statistics","chapter":"7 Descriptive Statistics","heading":"7 Descriptive Statistics","text":"proceeding please go first 6 chapters book Textbook Agricultural Statistics.can download iris data use inbuilt data set discussed chapter 6.analysis first import data, see Chapter 5. can inspect data using functions head() tail(), display first last part data, respectively.","code":"\n# import data set in to R\n# here we are using iris dataset\n\nmy_data<-iris # iris dataset is called in to variable my_data\n\n# display first 6 rows\nhead(my_data, 6)  ##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n## 1          5.1         3.5          1.4         0.2  setosa\n## 2          4.9         3.0          1.4         0.2  setosa\n## 3          4.7         3.2          1.3         0.2  setosa\n## 4          4.6         3.1          1.5         0.2  setosa\n## 5          5.0         3.6          1.4         0.2  setosa\n## 6          5.4         3.9          1.7         0.4  setosa\n# display last 6 rows\ntail(my_data,6)##     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n## 145          6.7         3.3          5.7         2.5 virginica\n## 146          6.7         3.0          5.2         2.3 virginica\n## 147          6.3         2.5          5.0         1.9 virginica\n## 148          6.5         3.0          5.2         2.0 virginica\n## 149          6.2         3.4          5.4         2.3 virginica\n## 150          5.9         3.0          5.1         1.8 virginica"},{"path":"descriptive-statistics.html","id":"list-of-r-functions","chapter":"7 Descriptive Statistics","heading":"7.1 List of R functions","text":"function mfv(), frequent value, [modeest package] can used find statistical mode numeric vector.","code":""},{"path":"descriptive-statistics.html","id":"measures-of-central-tendancy","chapter":"7 Descriptive Statistics","heading":"7.2 Measures of central tendancy","text":"Know Measures central tendency","code":"\n# Compute the mean value\nmean(iris$Sepal.Length)## [1] 5.843333\n# Compute the median value\nmedian(iris$Sepal.Length)  ## [1] 5.8\n# Compute the mode\n# install.packages(\"modeest\")\nrequire(modeest)## Loading required package: modeest## Warning: package 'modeest' was built under R version 4.2.2\nmfv(iris$Sepal.Length)  ## [1] 5\n# Compute the minimum value\nmin(iris$Sepal.Length)## [1] 4.3\n# Compute the maximum value\nmax(iris$Sepal.Length)  ## [1] 7.9\n# Quartiles  \nquantile(iris$Sepal.Length)  ##   0%  25%  50%  75% 100% \n##  4.3  5.1  5.8  6.4  7.9\n# Compute the median\nmedian(iris$Sepal.Length)## [1] 5.8"},{"path":"descriptive-statistics.html","id":"measures-of-dispersion","chapter":"7 Descriptive Statistics","heading":"7.3 Measures of dispersion","text":"Know Measures dispersion","code":"\n# Range\n# minimum value and maximum value is displayed\nrange(iris$Sepal.Length)  ## [1] 4.3 7.9\n# Inter quartile range  \nIQR(iris$Sepal.Length)  ## [1] 1.3\n# Compute the variance\nvar(iris$Sepal.Length)## [1] 0.6856935\n# Compute the standard deviation \nsd(iris$Sepal.Length)## [1] 0.8280661\n# Compute the median absolute deviation\nmad(iris$Sepal.Length)  ## [1] 1.03782"},{"path":"descriptive-statistics.html","id":"overall-summary","chapter":"7 Descriptive Statistics","heading":"7.4 Overall summary","text":"overall summary statistics One variable entire data frame can displayed using function summary().","code":""},{"path":"descriptive-statistics.html","id":"summary-of-single-variable","chapter":"7 Descriptive Statistics","heading":"7.4.1 Summary of single variable","text":"mean, median, 25th 75th quartiles, minimum maximum values returned single line call.","code":"\nsummary(iris$Sepal.Length)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##   4.300   5.100   5.800   5.843   6.400   7.900"},{"path":"descriptive-statistics.html","id":"summary-of-a-data-frame","chapter":"7 Descriptive Statistics","heading":"7.4.2 Summary of a Data frame","text":"instance, column receives automated use summary() method. kind data column determines output formatted. instance:mean, median, min, max, quartiles returned column numeric variable.mean, median, min, max, quartiles returned column numeric variable.total number observations group returned column factor variable.total number observations group returned column factor variable.","code":"\nsummary(iris)##   Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n##  Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n##  1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n##  Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n##  Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n##  3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n##  Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n##        Species  \n##  setosa    :50  \n##  versicolor:50  \n##  virginica :50  \n##                 \n##                 \n## "},{"path":"descriptive-statistics.html","id":"the-sapply-function","chapter":"7 Descriptive Statistics","heading":"7.5 The sapply function","text":"sapply() method may also used apply specific function list vector. example, may use compute mean, sd, var, min, quantile,… column data frame.","code":"\nsapply(iris[, -5], mean)## Sepal.Length  Sepal.Width Petal.Length  Petal.Width \n##     5.843333     3.057333     3.758000     1.199333\n# The command direct to find the mean of all columns in the dataset iris except 5th column, which is species and is non numeric \n\n# Compute quartiles\nsapply(iris[, -5], quantile)##      Sepal.Length Sepal.Width Petal.Length Petal.Width\n## 0%            4.3         2.0         1.00         0.1\n## 25%           5.1         2.8         1.60         0.3\n## 50%           5.8         3.0         4.35         1.3\n## 75%           6.4         3.3         5.10         1.8\n## 100%          7.9         4.4         6.90         2.5"},{"path":"descriptive-statistics.html","id":"some-other-useful-functions","chapter":"7 Descriptive Statistics","heading":"7.6 Some other useful functions","text":"","code":""},{"path":"descriptive-statistics.html","id":"stat.desc","chapter":"7 Descriptive Statistics","heading":"7.6.1 stat.desc()","text":"function stat.desc() [pastecs package], provides lot useful statistics single call","code":"\n#Install 'pastecs' package\n#load the library\nlibrary(pastecs)  \n\nres <- stat.desc(my_data[, -5]) # results were stored to the variable 'res'  \n\n# decimal digits were rounded to 2 using round()function\nround(res, 2)  ##              Sepal.Length Sepal.Width Petal.Length Petal.Width\n## nbr.val            150.00      150.00       150.00      150.00\n## nbr.null             0.00        0.00         0.00        0.00\n## nbr.na               0.00        0.00         0.00        0.00\n## min                  4.30        2.00         1.00        0.10\n## max                  7.90        4.40         6.90        2.50\n## range                3.60        2.40         5.90        2.40\n## sum                876.50      458.60       563.70      179.90\n## median               5.80        3.00         4.35        1.30\n## mean                 5.84        3.06         3.76        1.20\n## SE.mean              0.07        0.04         0.14        0.06\n## CI.mean.0.95         0.13        0.07         0.28        0.12\n## var                  0.69        0.19         3.12        0.58\n## std.dev              0.83        0.44         1.77        0.76\n## coef.var             0.14        0.14         0.47        0.64"},{"path":"descriptive-statistics.html","id":"missing-values","chapter":"7 Descriptive Statistics","heading":"7.7 Missing values","text":"noted R functions return errors NA even just one item missing data contains missing values. instance, vector even single missing value, mean() method return NA. option na.rm = TRUE, instructs function delete NAs computations, can used prevent . ’s example use mean function:","code":"\nmean(iris$Sepal.Length, na.rm = TRUE)"},{"path":"descriptive-statistics.html","id":"freq","chapter":"7 Descriptive Statistics","heading":"7.8 Frequency table","text":"theoretical details see \nDataset shows number children 50 household collected part survey. demonstrate frequency table can constructed.frequency counts variables appear chosen column dataframe calculated using table() function R. outcome presented two-row tabular structure, first row displaying value column second row displaying matching frequencies.","code":"\n# Create example vector  \nset.seed(99)\nsurvey_data<- floor(runif(50, min=0, max=10)) \nsurvey_data                                                  ##  [1] 5 1 6 9 5 9 6 2 3 1 5 5 1 6 6 6 3 1 0 1 2 0 8 5 7 3 0 8 0 2 5 3 3 5 0 4 6 8\n## [39] 6 9 8 4 7 9 4 9 3 4 5 1\n# Frequency Table\n\nfreq_table<- table(survey_data)\nfreq_table## survey_data\n## 0 1 2 3 4 5 6 7 8 9 \n## 5 6 3 6 4 8 7 2 4 5"},{"path":"descriptive-statistics.html","id":"cumulative-frequency","chapter":"7 Descriptive Statistics","heading":"7.8.1 Cumulative frequency","text":"total classes frequency distribution table, including class , makes cumulative frequency distribution particular data set. value every cell location calculated adding current value previous values encountered point. may determined using cumsum() method.results now can easily answer question: number families 8 less 8 children?. 45","code":"\n# cumulative frequency\n\ncumsum(freq_table)##  0  1  2  3  4  5  6  7  8  9 \n##  5 11 14 20 24 32 39 41 45 50"},{"path":"descriptive-statistics.html","id":"grouped-frequency-distribution","chapter":"7 Descriptive Statistics","heading":"7.8.2 Grouped Frequency distribution","text":"grouped frequency table?going details constructing frequency table read thoroughly construction grouped frequency table.","code":"\n# Constucting frequency table\ndata<-iris$Sepal.Length  \n\n# Decide how many classes you wish to use using struges formula\nN<- length(data)\nk<-1+3.322*log(N,base=10)\nn_class<-ceiling(k) #Rounds value of k to nearest highest integer.\n  \n#Determine the class width  \nc<-(max(data)-min(data))/k\n\n# Rounded value of c to one digit after decimal \nclass_width<-round(c,1) \n\n# Find lower limit  \nL<-min(data)-((c*k-(max(data)-min(data)))/2)\n\n# Upper limit  \nU<-L+(class_width*n_class)\n\n#Break the range [L,U] into non-overlapping sub-intervals by defining a sequence of equal distance break points (class_width). \nbreaks = seq(L, U, by=class_width) \n\n#Classify the data according to the sub-intervals (each of class_width length) with cut. As the intervals are to be closed on the left, and open on the right, we set the right argument as FALSE.\ndata.cut = cut(data, breaks, right=FALSE)\n\n# Generate frequency table of classes\ndata.freq = table(data.cut)\ndata.freq## data.cut\n## [4.3,4.7) [4.7,5.1) [5.1,5.5) [5.5,5.9) [5.9,6.3) [6.3,6.7) [6.7,7.1) [7.1,7.5) \n##         9        23        20        28        19        23        16         6 \n## [7.5,7.9) \n##         5"},{"path":"descriptive-statistics.html","id":"r-function","chapter":"7 Descriptive Statistics","heading":"7.9 R function","text":"section just information. don’t want go deep programming part, concentrating data analysis. interested can skip section.function block code runs called. can pass data, known parameters, function. function can return data result.","code":""},{"path":"descriptive-statistics.html","id":"creating-a-function","chapter":"7 Descriptive Statistics","heading":"7.9.1 Creating a Function","text":"create function, use function() keyword:example, ’m creating function named print_me(), calling print_me(), automatically prints “Hello world!”section written least 12 lines code construct grouped frequency table data. time need run code individually, difficult task. can create Function perform task single call. ’m creating function called construct() create grouped frequency table.Constructing frequency table Petal.Length iris dataset using construct function just created.Self assesmentDownload dataset clicking HereFind descriptive statistics data using functions .\n3.Construct grouped frequency table Petal.Width column iris data.","code":"\n#General Format\nfunction_name<- function(){\n  #function_body\n}\n# create a function with the name print_me\nprint_me <- function() { \n  print(\"Hello World!\")\n}\n# calling function print_me()\nprint_me()## [1] \"Hello World!\"\nconstruct <- function(x) \n  {\n  #This function will take in a numeric vector x and gives its frequency table\n  N<- length(x)\n  k<-1+3.322*log(N,base=10)\n  n_class<-ceiling(k)\n  c<-(max(data)-min(data))/k\n  class_width<-round(c,1) \n  L<-min(data)-((c*k-(max(data)-min(data)))/2)\n  U<-L+(class_width*n_class)\n  breaks = seq(L, U, by=class_width) \n  data.cut = cut(data, breaks, right=FALSE)\n  data.freq = table(data.cut)\n  data.freq\n}\nconstruct(iris$Petal.Length)## data.cut\n## [4.3,4.7) [4.7,5.1) [5.1,5.5) [5.5,5.9) [5.9,6.3) [6.3,6.7) [6.7,7.1) [7.1,7.5) \n##         9        23        20        28        19        23        16         6 \n## [7.5,7.9) \n##         5"},{"path":"graphical-representation.html","id":"graphical-representation","chapter":"8 Graphical Representation","heading":"8 Graphical Representation","text":"section see draw basic commonly used graphs charts R. Advanced plotting graphs discussed later. Following graphs charts discussed .Bar Plot Bar ChartPie Diagram Pie ChartHistogramScatter PlotBox Plot","code":""},{"path":"graphical-representation.html","id":"bar-plot","chapter":"8 Graphical Representation","heading":"8.1 Bar Plot","text":"let us suppose, vector maximum temperatures (degree Celsius) seven days follows.Drawing barplot data\nmodify way data plotted, barplot() function may require great deal input. may found help area.often used ones include main, assigns title, xlab ylab, offer axis labels, names.arg, names bar, col, specifies colour, others.adding option horiz = TRUE, can also plot bars horizontal direction.","code":"\nmax.temp <- c(22, 27, 26, 24, 23, 26, 28)\nbarplot(max.temp)\n# To know more about barplot\n?barplot  \n# barchart with added parameters\nbarplot(max.temp,\nmain = \"Maximum Temperatures in a Week\",\nxlab = \"Degree Celsius\",\nylab = \"Day\",\nnames.arg = c(\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"),\ncol = \"#F9E79F\", # hex colour code\nhoriz = FALSE)"},{"path":"graphical-representation.html","id":"hex-colour-codes","chapter":"8 Graphical Representation","heading":"8.1.1 Hex colour codes","text":"Hexadecimal colors visual language tell colour. want graph certain color, tell hex code.\nFigure 8.1: Hex codes colour\n6-symbol code made three 2-symbol parts known hex colour code. elements’ two symbols represents colour value 0 255. Hex colour code begins hash symbol(#).Element 1: Red value\nElement 2: Green value\nElement 3: Blue valueThe code converts value distinct 2-digit alphanumeric code. instance, hexadecimal representation RGB value (224, 105, 16) E06910.16 million distinct colours may shown using hexadecimal coding, estimated human eye can distinguish.Popular hex codes","code":""},{"path":"graphical-representation.html","id":"how-to-get-hex-codes","chapter":"8 Graphical Representation","heading":"8.1.1.1 How to get hex codes","text":"can easily find hex code colour want using colour picker. Just copy hex code use R code.\nFigure 8.2: Colour picker\n","code":""},{"path":"graphical-representation.html","id":"plotting-categorical-data","chapter":"8 Graphical Representation","heading":"8.1.2 Plotting categorical data","text":"plot………………","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
